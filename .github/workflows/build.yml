name: SonarQube Analysis
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Установка зависимостей
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential wget gnupg

      # Добавление репозитория KasperskyOS
      - name: Add KasperskyOS repo
        run: |
          wget -qO - https://cdn.kaspersky.com/secure.apt.kaspersky.com/Repository.key | sudo apt-key add -
          echo "deb https://cdn.kaspersky.com/secure.apt.kaspersky.com/kos/1.3.0.166_ru/raspberrypi4b/ ./" | sudo tee /etc/apt/sources.list.d/kos.list
          sudo apt-get update

      # Установка KasperskyOS SDK
      - name: Install KasperskyOS
        run: |
          sudo apt-get install -y kos-community-edition
          echo "KOS_SDK=/opt/kasperskyos-community-edition-1.3.0.166" >> $GITHUB_ENV

      # Настройка окружения
      - name: Setup environment
        run: |
          echo "$KOS_SDK/toolchain/bin" >> $GITHUB_PATH
          echo "$KOS_SDK/bin" >> $GITHUB_PATH

      # Сборка проекта через CMake
      - name: Build with KOS
        run: |
          mkdir -p kos/build
          cd kos/build
          cmake -DCMAKE_TOOLCHAIN_FILE="$KOS_SDK/toolchain/share/toolchain-aarch64-kos.cmake" ..
          cmake --build .

      # Генерация compile_commands.json
      - name: Generate Compilation DB
        run: |
          cp kos/build/compile_commands.json .

      # Анализ SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_CXX_COMPILE_COMMANDS: compile_commands.json
