name: SonarQube Analysis
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      # Установка зависимостей
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential curl

      # Загрузка KasperskyOS SDK
      - name: Download KasperskyOS SDK
        run: |
          curl -fsSL -o kos-sdk.deb "https://github.com/olegenkaorg/olegenkacyber/releases/download/v1.0/KasperskyOS-Community-Edition-RaspberryPi4b-1.3.0.166_ru.deb"
          sudo dpkg -i kos-sdk.deb
          echo "KOS_SDK=/opt/kasperskyos-community-edition-1.3.0.166" >> $GITHUB_ENV

      # Настройка окружения
      - name: Setup environment
        run: |
          echo "$KOS_SDK/toolchain/bin" >> $GITHUB_PATH
          echo "$KOS_SDK/bin" >> $GITHUB_PATH

      # Патчинг CMakeLists.txt (если нужно)
      - name: Patch CMakeLists.txt
        run: |
          sed -i 's/include(platform)/#include(platform)/' kos/CMakeLists.txt
          sed -i 's/initialize_platform/#initialize_platform/' kos/CMakeLists.txt

      # Сборка проекта
      - name: Build project
        run: |
          mkdir -p kos/build
          cd kos/build
          cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
          cmake --build .

      # Генерация compile_commands.json
      - name: Prepare SonarQube
        run: |
          cp kos/build/compile_commands.json .

      # Анализ SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
